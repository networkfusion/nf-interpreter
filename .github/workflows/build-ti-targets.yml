name: Devcontainer build for TI targets

on: # TI specific changes. We specifically ignore other (RTOS) target and text file changes.
  push:
    paths:
      - '!**/*.md'
      - '.github/workflows/build-ti-targets.yml'
      - '.devcontainer/sources/Dockerfile.TI'
      - '.devcontainer/Dockerfile.TI'
      - '.devcontainer/devcontainer.json'
      - 'targets/TI_SimpleLink/**'
      - 'targets-community/TI_SimpleLink/**'
      - 'src/**'
      - 'CMake/**'
      - 'bootloader_components/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
  pull_request:
    paths:
      - '!**/*.md'
      - '.github/workflows/build-ti-targets.yml'
      - '.devcontainer/sources/Dockerfile.TI'
      - '.devcontainer/Dockerfile.TI'
      - '.devcontainer/devcontainer.json'
      - 'targets/TI_SimpleLink/**'
      - 'targets-community/TI_SimpleLink/**'
      - 'src/**'
      - 'CMake/**'
      - 'bootloader_components/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
  release:
    types:
      - created
  workflow_dispatch:


jobs:
  build-target:
    strategy:
      fail-fast: false # Continues to build other targets in the matrix, even if one fails.

      matrix: # Add the target and build type you wish to generate firmware for:
        include: [
          # { target: TI_CC1352R1_LAUNCHXL, build-type: MinSizeRel, radio-freq: 915 },
          # { target: TI_CC1352R1_LAUNCHXL, build-type: Debug, radio-freq: 915 },
          # { target: TI_CC1352R1_LAUNCHXL, build-type: MinSizeRel, radio-freq: 868 },
          { target: TI_CC1352R1_LAUNCHXL, build-type: Debug, radio-freq: 868 },

          # BROKEN!
          # { target: TI_CC3220SF_LAUNCHXL, build-type: MinSizeRel, radio-freq: 915 },
          # { target: TI_CC3220SF_LAUNCHXL, build-type: Debug, radio-freq: 915 },
          # { target: TI_CC3220SF_LAUNCHXL, build-type: MinSizeRel, radio-freq: 868 },
          # { target: TI_CC3220SF_LAUNCHXL, build-type: Debug, radio-freq: 868 },


          # Community targets:
                
          # { target: TI_CC1352P1_LAUNCHXL, build-type: MinSizeRel, radio-freq: 915 },
          # { target: TI_CC1352P1_LAUNCHXL, build-type: Debug, radio-freq: 915 },
          # { target: TI_CC1352P1_LAUNCHXL, build-type: MinSizeRel, radio-freq: 868 },
          # { target: TI_CC1352P1_LAUNCHXL, build-type: Debug, radio-freq: 868 },

        ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Update repo submodules
        run: |
          git submodule update --init

      - name: Adjust config templates for a devcontainer
        run: |
            # Move into the config directory
            pushd config
            
            # Rename the templates
            mv user-prefs.TEMPLATE.json user-prefs.json
            mv user-tools-repos.TEMPLATE.json user-tools-repos.json

            # Adjust the file content for a devcontainer
            sed -i -- 's|"name": "user-tools-repos-container"|"name": "user-tools-repos"|g' user-tools-repos.json

            # Adjust the file content for a valid radio frequency
            sed -i -- 's|"RADIO_FREQUENCY": "CHANGE_ME_TO_A_VALID_VALUE_868_OR_915"|"RADIO_FREQUENCY": "${{ matrix.radio-freq }}"|g' user-prefs.json
            
            # Move out of the config directory
            popd

      - name: Adjust devcontainer.json (TI)
        run: |
            # Move into the .devcontainer directory
            pushd .devcontainer
            
            # target the TI container (rather than "All") for a quicker build.
            # sed -i -- 's|"dockerFile": "Dockerfile.All"|"dockerFile": "Dockerfile.TI"|g' devcontainer.json
            
            # But if needed, we could change to the available devcontainer image, so we target the source instead (which takes a little longer to build).
            sed -i -- 's|"dockerFile": "Dockerfile.All"|"dockerFile": "sources/Dockerfile.TI"|g' devcontainer.json
            
            # Move out of the .devcontainer directory
            popd

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.target }} ${{ matrix.build-type }} Firmware
        uses: devcontainers/ci@v0.3
        with:
          # The TI container
          cacheFrom: ghcr.io/nanoframework/dev-container-ti
          push: never
          runCmd: |
            # Build target:
            cmake --preset=${{ matrix.target }} -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
            cmake --build build

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Firmware ${{ matrix.target }}-${{ matrix.radio-freq }}-${{ matrix.build-type }}
          path: |
            ./build/*.map
            ./build/*.elf
            ./build/*.hex
            ./build/*.bin
            ./build/*.dfu
